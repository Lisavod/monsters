{"ast":null,"code":"import _slicedToArray from \"/Users/vasiliska/Colt/Packages/React/monsters-rolodex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/vasiliska/Colt/Packages/React/monsters-rolodex/src/App.js\";\n\nimport { useState } from 'react'; //import useState hook from react for using in functions\n\nimport { useEffect } from 'react';\nimport { Component } from 'react'; //we need it for using Class\n\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport CardList from './components/card-list/card-list.component';\nimport SearchBox from './components/search-box/search-box.component'; //functional component structure\n\nvar App = function App() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      searchVal = _useState2[0],\n      setSearchVal = _useState2[1]; //use array distructuring; [value - we will store, setValue function]\n\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      monsters = _useState4[0],\n      setMonsters = _useState4[1];\n\n  var _useState5 = useState(monsters),\n      _useState6 = _slicedToArray(_useState5, 2),\n      filteredMonsters = _useState6[0],\n      setFilteredMonsters = _useState6[1];\n\n  useEffect(function () {\n    fetch('https://jsonplaceholder.typicode.com/users') //moment when component mounted into DOM\n    //it is a promis\n    .then(function (response) {\n      return response.json();\n    }).then(function (users) {\n      return setMonsters(users);\n    });\n  }, []);\n  useEffect(function () {\n    var newFilteredMonsters = monsters.filter(function (monster) {\n      return monster.name.toLocaleLowerCase().includes(searchVal);\n    });\n    setFilteredMonsters(newFilteredMonsters);\n  }, [monsters, searchVal]);\n\n  var onSearchChange = function onSearchChange(event) {\n    var searchValString = event.target.value.toLocaleLowerCase();\n    setSearchVal(searchValString);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"app-title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, \"Monsters Rolodex\"), /*#__PURE__*/React.createElement(SearchBox, {\n    onChangeHandler: onSearchChange,\n    placeholder: \"monsters search\",\n    className: \"monsters-search-box\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CardList, {\n    monsters: filteredMonsters,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }));\n}; // class App1 extends Component {\n//   constructor() {\n//     super();\n//       this.state = {\n//         monsters: [],\n//         searchVal: ''\n//     //initialize local state\n//       };\n//     }\n//   componentDidMount(){ \n//     fetch('https://jsonplaceholder.typicode.com/users')//moment when component mounted into DOM\n// //it is a promis\n//         .then((response) => response.json())\n//         .then((users) => this.setState(()=> {\n//           return {monsters: users}\n//         },\n//         ()=> {\n//           console.log(this.state)\n//         }\n//         ));\n//     }\n// onSearchChange = (event) => {\n//   console.log(event.target.value);\n//   const searchVal = event.target.value.toLocaleLowerCase();\n//   this.setState(()=>{\n//    return {searchVal}\n//   });\n// }\n// render() {\n// console.log('render');\n// const { monsters, searchVal } = this.state; //distructure, to get rig of this.state.monsters\n// const { onSearchChange } = this; //distructure, to get rig of this.onSearchChange\n// const monsterSearch = monsters.filter(el => {\n//   return el.name.toLocaleLowerCase().includes(searchVal);\n// });\n//       console.log('render');\n//       const { monsters, searchVal } = this.state; //distructure, to get rig of this.state.monsters\n//       const { onSearchChange } = this; //distructure, to get rig of this.onSearchChange\n//       const monsterSearch = monsters.filter(el => {\n//         return el.name.toLocaleLowerCase().includes(searchVal);\n//       });\n//       return ( \n//         <div className = \"App\">\n//           <h1 className=\"app-title\">Monsters Rolodex</h1>\n//             <SearchBox onChangeHandler={onSearchChange} placeholder='monsters search' className='monsters-search-box'/>\n//             <CardList monsters={monsterSearch} />\n//         </div>\n//       );\n//     }\n// }\n\n\nexport default App; // function App() {\n// return ( < div className = \"App\" >\n//     <\n//     header className = \"App-header\" >\n//     <\n//     img src = { logo }\n//     className = \"App-logo\"\n//     alt = \"logo\" / >\n//     <\n//     p >\n//     Edit < code > src / App.js < /code> and save to reload. < /\n//     p > <\n//     a className = \"App-link\"\n//     href = \"https://reactjs.org\"\n//     target = \"_blank\"\n//     rel = \"noopener noreferrer\" >\n//     Learn React <\n//     /a> < /\n//     header > <\n//     /div>\n// );\n// }\n// class App extends Component {\n//   constructor() {\n//     super();\n//     this.state = { //initialize local state\n//       name: {firstName: 'Andy', lastName: 'Bin'},\n//     }\n//   }\n//     render() {\n//         return ( \n//         <div className = \"App\">\n//           <header className = \"App-header\">\n//             <img src = { logo } className = \"App-logo\" alt = \"logo\"/>\n//             <p>My name is {this.state.name.firstName} {this.state.name.lastName}</p>\n//             <button onClick={()=> {\n//                 this.setState(()=> {\n//                   return {\n//                     name: {firstName: 'Lina', lastName: 'Vdovina'},\n//                 };\n//                  }, () => {console.log(this.state);}\n//                 );\n//               }}\n//             >\n//               Change name\n//             </button>\n//           </header> \n//         </div>\n//       );\n//   }\n// }","map":{"version":3,"names":["useState","useEffect","Component","CardList","SearchBox","App","searchVal","setSearchVal","monsters","setMonsters","filteredMonsters","setFilteredMonsters","fetch","then","response","json","users","newFilteredMonsters","filter","monster","name","toLocaleLowerCase","includes","onSearchChange","event","searchValString","target","value"],"sources":["/Users/vasiliska/Colt/Packages/React/monsters-rolodex/src/App.js"],"sourcesContent":["import {useState} from 'react'; //import useState hook from react for using in functions\nimport {useEffect} from 'react';\nimport {Component} from 'react'; //we need it for using Class\nimport logo from './logo.svg';\nimport './App.css';\nimport CardList from './components/card-list/card-list.component';\nimport SearchBox from './components/search-box/search-box.component';\n\n//functional component structure\n\nconst App = () => {\n  const [searchVal, setSearchVal] = useState('');  //use array distructuring; [value - we will store, setValue function]\n  const [monsters, setMonsters] = useState([]);\n  const [filteredMonsters, setFilteredMonsters] = useState(monsters);\n\n  useEffect(()=>{\n    fetch('https://jsonplaceholder.typicode.com/users')//moment when component mounted into DOM\n    //it is a promis\n      .then((response) => response.json())\n      .then((users) => setMonsters(users));\n  }, []);  \n  \n  useEffect(()=>{\n    const newFilteredMonsters = monsters.filter(monster => {\n      return monster.name.toLocaleLowerCase().includes(searchVal);\n    });\n    setFilteredMonsters(newFilteredMonsters); \n  }, [monsters, searchVal]); \n      \n  \n\n  const onSearchChange = (event) => {\n    const searchValString = event.target.value.toLocaleLowerCase();\n    setSearchVal(searchValString);\n    \n  };\n  return (\n    <div className='App'>\n      <h1 className='app-title'>Monsters Rolodex</h1>\n      <SearchBox \n          onChangeHandler={onSearchChange}  \n          placeholder='monsters search' \n          className='monsters-search-box'/>\n      <CardList monsters={filteredMonsters} />\n    </div>\n  );\n  \n\n}\n\n\n// class App1 extends Component {\n//   constructor() {\n//     super();\n//       this.state = {\n//         monsters: [],\n//         searchVal: ''\n//     //initialize local state\n//       };\n//     }\n  \n//   componentDidMount(){ \n//     fetch('https://jsonplaceholder.typicode.com/users')//moment when component mounted into DOM\n// //it is a promis\n//         .then((response) => response.json())\n//         .then((users) => this.setState(()=> {\n//           return {monsters: users}\n//         },\n//         ()=> {\n//           console.log(this.state)\n//         }\n//         ));\n//     }\n\n    // onSearchChange = (event) => {\n    //   console.log(event.target.value);\n    //   const searchVal = event.target.value.toLocaleLowerCase();\n    //   this.setState(()=>{\n    //    return {searchVal}\n    //   });\n    // }\n    \n    // render() {\n      // console.log('render');\n      // const { monsters, searchVal } = this.state; //distructure, to get rig of this.state.monsters\n      // const { onSearchChange } = this; //distructure, to get rig of this.onSearchChange\n      // const monsterSearch = monsters.filter(el => {\n      //   return el.name.toLocaleLowerCase().includes(searchVal);\n      // });\n\n//       console.log('render');\n//       const { monsters, searchVal } = this.state; //distructure, to get rig of this.state.monsters\n//       const { onSearchChange } = this; //distructure, to get rig of this.onSearchChange\n//       const monsterSearch = monsters.filter(el => {\n//         return el.name.toLocaleLowerCase().includes(searchVal);\n//       });\n\n//       return ( \n//         <div className = \"App\">\n//           <h1 className=\"app-title\">Monsters Rolodex</h1>\n          \n//             <SearchBox onChangeHandler={onSearchChange} placeholder='monsters search' className='monsters-search-box'/>\n//             <CardList monsters={monsterSearch} />\n      \n//         </div>\n//       );\n//     }\n// }\n\nexport default App;\n\n// function App() {\n// return ( < div className = \"App\" >\n//     <\n//     header className = \"App-header\" >\n//     <\n//     img src = { logo }\n//     className = \"App-logo\"\n//     alt = \"logo\" / >\n//     <\n//     p >\n//     Edit < code > src / App.js < /code> and save to reload. < /\n//     p > <\n//     a className = \"App-link\"\n//     href = \"https://reactjs.org\"\n//     target = \"_blank\"\n//     rel = \"noopener noreferrer\" >\n//     Learn React <\n//     /a> < /\n//     header > <\n//     /div>\n// );\n// }\n\n\n\n\n\n\n// class App extends Component {\n//   constructor() {\n//     super();\n\n//     this.state = { //initialize local state\n//       name: {firstName: 'Andy', lastName: 'Bin'},\n//     }\n//   }\n\n//     render() {\n//         return ( \n//         <div className = \"App\">\n//           <header className = \"App-header\">\n//             <img src = { logo } className = \"App-logo\" alt = \"logo\"/>\n\n//             <p>My name is {this.state.name.firstName} {this.state.name.lastName}</p>\n//             <button onClick={()=> {\n//                 this.setState(()=> {\n//                   return {\n//                     name: {firstName: 'Lina', lastName: 'Vdovina'},\n//                 };\n//                  }, () => {console.log(this.state);}\n//                 );\n//               }}\n//             >\n//               Change name\n//             </button>\n\n//           </header> \n//         </div>\n//       );\n//   }\n// }\n"],"mappings":";;;;;AAAA,SAAQA,QAAR,QAAuB,OAAvB,C,CAAgC;;AAChC,SAAQC,SAAR,QAAwB,OAAxB;AACA,SAAQC,SAAR,QAAwB,OAAxB,C,CAAiC;;;AAEjC,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,4CAArB;AACA,OAAOC,SAAP,MAAsB,8CAAtB,C,CAEA;;AAEA,IAAMC,GAAG,GAAG,SAANA,GAAM,GAAM;EAAA,gBACkBL,QAAQ,CAAC,EAAD,CAD1B;EAAA;EAAA,IACTM,SADS;EAAA,IACEC,YADF,kBACiC;;;EADjC,iBAEgBP,QAAQ,CAAC,EAAD,CAFxB;EAAA;EAAA,IAETQ,QAFS;EAAA,IAECC,WAFD;;EAAA,iBAGgCT,QAAQ,CAACQ,QAAD,CAHxC;EAAA;EAAA,IAGTE,gBAHS;EAAA,IAGSC,mBAHT;;EAKhBV,SAAS,CAAC,YAAI;IACZW,KAAK,CAAC,4CAAD,CAAL,CAAmD;IACnD;IADA,CAEGC,IAFH,CAEQ,UAACC,QAAD;MAAA,OAAcA,QAAQ,CAACC,IAAT,EAAd;IAAA,CAFR,EAGGF,IAHH,CAGQ,UAACG,KAAD;MAAA,OAAWP,WAAW,CAACO,KAAD,CAAtB;IAAA,CAHR;EAID,CALQ,EAKN,EALM,CAAT;EAOAf,SAAS,CAAC,YAAI;IACZ,IAAMgB,mBAAmB,GAAGT,QAAQ,CAACU,MAAT,CAAgB,UAAAC,OAAO,EAAI;MACrD,OAAOA,OAAO,CAACC,IAAR,CAAaC,iBAAb,GAAiCC,QAAjC,CAA0ChB,SAA1C,CAAP;IACD,CAF2B,CAA5B;IAGAK,mBAAmB,CAACM,mBAAD,CAAnB;EACD,CALQ,EAKN,CAACT,QAAD,EAAWF,SAAX,CALM,CAAT;;EASA,IAAMiB,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD,EAAW;IAChC,IAAMC,eAAe,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmBN,iBAAnB,EAAxB;IACAd,YAAY,CAACkB,eAAD,CAAZ;EAED,CAJD;;EAKA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAI,SAAS,EAAC,WAAd;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,sBADF,eAEE,oBAAC,SAAD;IACI,eAAe,EAAEF,cADrB;IAEI,WAAW,EAAC,iBAFhB;IAGI,SAAS,EAAC,qBAHd;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAFF,eAME,oBAAC,QAAD;IAAU,QAAQ,EAAEb,gBAApB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EANF,CADF;AAYD,CAtCD,C,CAyCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEI;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACE;AACA;AACA;AACA;AACA;AACA;AAEN;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;;;AAEA,eAAeL,GAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}